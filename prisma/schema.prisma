// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  githubUrl   String?
  technologies String   @db.Text
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String   @db.Text
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Analytics {
  id            Int      @id @default(autoincrement())
  pageUrl       String
  visitorIp     String?
  userAgent     String?
  referrer      String?
  visitDate     DateTime @default(now())
  countryCode   String?
  deviceType    String?
}

model Skill {
  id          Int      @id @default(autoincrement())
  name        String
  category    String
  proficiency Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Career {
  id          Int      @id @default(autoincrement())
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime?
  description String   @db.Text
  current     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Certificate {
  id          Int      @id @default(autoincrement())
  name        String
  issuer      String
  issueDate   DateTime
  expiryDate  DateTime?
  credentialUrl String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
